version: "3.1"

services:
  #This handles all of the http request to simple cert issues and both the SP and IdP can share the same ports.
  httpd-proxy:
    build: ./httpd-proxy/
    networks:
     - front
     - back
    ports:
     - "80:80"
     - "443:443"

  idp:
    build: ./idp/
    depends_on: 
     - ldap
    environment:
     - JETTY_MAX_HEAP=64m
     - JETTY_BROWSER_SSL_KEYSTORE_PASSWORD=password
     - JETTY_BACKCHANNEL_SSL_KEYSTORE_PASSWORD=password
    expose: 
     - "4443"
    networks:
     - back
    secrets:
     - source: idp_backchannel
     - source: idp_browser
     - source: idp_encryption
     - source: idp_signing
     - source: idp_sealer     
   
  ldap:
    build: ./ldap/
    networks:
     - back

  sp:
    build: ./sp/ 
    networks:
     - back
    secrets:
     - source: sp_key
  
  simplesamlphp:
    build: ./simplesamlphp/
    links:
      - httpd-proxy:idptestbed
    networks:
     - back
    secrets:
     - source: ssp_key
  
  php-cas:
    build: ./php-cas/
    links:
      - httpd-proxy:idptestbed
    networks:
     - back

  db:
    image: postgres
    networks: 
     - front
  
  web:
    build: ./django/
    volumes: 
     - ./django:/code
    networks: 
     - front
    links:
     - ldap
     - idp
     - httpd-proxy
     - sp
    ports:
      - "8000:8000"
    command: "python3 manage.py runserver 0.0.0.0:8000"

networks:
  front:
    driver: bridge
  back:    
    driver: bridge

secrets:
  idp_backchannel:
    file: ./secrets/idp/idp-backchannel.p12
  idp_browser:
    file: ./secrets/idp/idp-browser.p12
  idp_encryption:
    file: ./secrets/idp/idp-encryption.key
  idp_signing:
    file: ./secrets/idp/idp-signing.key
  idp_sealer:
    file: ./secrets/idp/sealer.jks
  ssp_key:
    file: ./secrets/simplesamlphp/server.pem
  sp_key:
    file: ./secrets/sp/sp-key.pem
